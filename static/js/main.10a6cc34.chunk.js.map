{"version":3,"sources":["api/apiKey.js","api/weatherbit.js","store/ducks/weather.js","components/LinkButton.js","components/Loader.js","components/CurrentWeather/CurrentWeather.js","components/CityNotFound.js","components/Home/Home.js","store/ducks/city.js","components/HoursForecastItem/HoursForecastItem.js","helpers/formatDate.js","components/HoursForecastList/HoursForecastList.js","helpers/nameOfTheDay.js","components/DaysForecastCard/DaysForecastCard.js","components/DaysForecast/DaysForecast.js","components/ErrorPage/ErrorPage.js","components/App.js","store/ducks/index.js","store/createStore.js","index.js"],"names":["API_KEY","weatherbit","axios","create","baseURL","transformResponse","defaults","data","humps","camelizeKeys","currentWeather","city","get","hoursForecast","daysForecast","initialState","fetchingCurrentWeather","fetchingHoursForecast","fetchingDaysForecast","error","fetchCurrentWeather","dispatch","a","response","type","payload","fetchingError","fetchHoursForecast","fetchDaysForecast","fetchingWeather","LinkButton","message","path","additionalOption","className","to","Loader","CurrentWeather","currentWeatherResponse","fetching","appTemp","cityName","temp","windSpd","windCdir","countryCode","icon","weather","width","alt","src","CityNotFound","Home","currentCity","this","props","fetchAllForecasts","fetchData","e","target","value","preventDefault","responseStatus","status","placeholder","onChange","handleInputChange","bind","onClick","formSubmit","React","Component","connect","HoursForecastItem","hour","key","windGustSpd","timestampLocal","split","slice","hoursForecastResponse","hourItem","map","ts","days","0","1","2","3","4","5","6","DaysForecastCard","day","date","Date","getDay","nameOfTheDay","datetime","maxTemp","minTemp","daysForecastResponse","dayCard","pageNotFound","App","basename","process","exact","component","HoursForecast","DaysForecast","ErrorPage","combineReducers","state","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.10a6cc34.chunk.js","sourcesContent":["export const API_KEY = \"3360ae64317b4762ba87b0e2747b0ccf\";\r\n","import axios from \"axios\";\r\nimport { API_KEY } from \"./apiKey\";\r\nimport humps from \"humps\";\r\n\r\nconst weatherbit = axios.create({\r\n  baseURL: \"https://api.weatherbit.io/v2.0/\",\r\n  transformResponse: [\r\n    ...axios.defaults.transformResponse,\r\n    data => humps.camelizeKeys(data)\r\n  ]\r\n});\r\n\r\nexport const currentWeather = city => {\r\n  const response = weatherbit.get(`/current?city=${city}&key=${API_KEY}`);\r\n\r\n  return response;\r\n};\r\n\r\nexport const hoursForecast = city => {\r\n  const response = weatherbit.get(\r\n    `/forecast/hourly?city=${city}&key=${API_KEY}&hours=24`\r\n  );\r\n\r\n  return response;\r\n};\r\n\r\nexport const daysForecast = city => {\r\n  const response = weatherbit.get(\r\n    `/forecast/daily?city=${city}&key=${API_KEY}`\r\n  );\r\n\r\n  return response;\r\n};\r\n","import {\r\n  currentWeather,\r\n  hoursForecast,\r\n  daysForecast\r\n} from \"../../api/weatherbit\";\r\n\r\nconst CURRENT_WEATHER = \"CURRENT_WEATHER\";\r\nconst HOURS_FORECAST_WEATHER = \"HOURS_FORECAST_WEATHER\";\r\nconst DAYS_FORECAST_WEATHER = \"DAYS_FORECAST_WEATHER\";\r\nconst FETCHING_WEATHER = \"FETCHING_WEATHER\";\r\nconst FETCHING_ERROR = \"FETCHING_ERROR\";\r\n\r\nconst initialState = {\r\n  currentWeather: [],\r\n  hoursForecast: [],\r\n  daysForecast: [],\r\n  fetchingCurrentWeather: true,\r\n  fetchingHoursForecast: true,\r\n  fetchingDaysForecast: true,\r\n  error: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CURRENT_WEATHER\":\r\n      return {\r\n        ...state,\r\n        currentWeather: action.payload,\r\n        fetchingCurrentWeather: false\r\n      };\r\n    case \"HOURS_FORECAST_WEATHER\":\r\n      return {\r\n        ...state,\r\n        hoursForecast: action.payload,\r\n        fetchingHoursForecast: false\r\n      };\r\n    case \"DAYS_FORECAST_WEATHER\":\r\n      return {\r\n        ...state,\r\n        daysForecast: action.payload,\r\n        fetchingDaysForecast: false\r\n      };\r\n    case \"FETCHING_WEATHER\":\r\n      return {\r\n        ...state,\r\n        fetchingCurrentWeather: true,\r\n        fetchingHoursForecast: true,\r\n        fetchingDaysForecast: true\r\n      };\r\n    case \"FETCHING_ERROR\":\r\n      return {\r\n        ...state,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const fetchAllForecasts = city => async dispatch => {\r\n  await dispatch(fetchingWeather());\r\n  await dispatch(fetchCurrentWeather(city));\r\n  await dispatch(fetchHoursForecast(city));\r\n  await dispatch(fetchDaysForecast(city));\r\n};\r\n\r\nexport const fetchCurrentWeather = city => async dispatch => {\r\n  try {\r\n    const response = await currentWeather(city);\r\n\r\n    dispatch({ type: CURRENT_WEATHER, payload: response });\r\n  } catch (error) {\r\n    dispatch(fetchingError(error));\r\n  }\r\n};\r\n\r\nexport const fetchHoursForecast = city => async dispatch => {\r\n  try {\r\n    const response = await hoursForecast(city);\r\n\r\n    dispatch({ type: HOURS_FORECAST_WEATHER, payload: response });\r\n  } catch (error) {\r\n    dispatch(fetchingError(error));\r\n  }\r\n};\r\n\r\nexport const fetchDaysForecast = city => async dispatch => {\r\n  try {\r\n    const response = await daysForecast(city);\r\n\r\n    dispatch({ type: DAYS_FORECAST_WEATHER, payload: response });\r\n  } catch (error) {\r\n    dispatch(fetchingError(error));\r\n  }\r\n};\r\n\r\nconst fetchingWeather = () => {\r\n  return {\r\n    type: FETCHING_WEATHER\r\n  };\r\n};\r\n\r\nconst fetchingError = error => {\r\n  return {\r\n    type: FETCHING_ERROR,\r\n    payload: error\r\n  };\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst LinkButton = ({ message, path, additionalOption }) => {\r\n  return (\r\n    <div className=\"ui one column centered grid\">\r\n      <div className=\"sixteen wide column error-back-button\">\r\n        <div>\r\n          <Link className={`ui blue button ${additionalOption}`} to={path}>\r\n            {message}\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui grid aligned center\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui large text loader\">Wczytywanie</div>\r\n        </div>\r\n        <p></p>\r\n        <p></p>\r\n        <p></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport \"./CurrentWeather.css\";\r\nimport Loader from \"../Loader\";\r\n\r\nconst CurrentWeather = ({ currentWeatherResponse, fetching }) => {\r\n  if (!fetching) {\r\n    const currentWeather = currentWeatherResponse.data.data[0];\r\n    const {\r\n      appTemp,\r\n      cityName,\r\n      temp,\r\n      windSpd,\r\n      windCdir,\r\n      countryCode\r\n    } = currentWeather;\r\n\r\n    const { icon } = currentWeather.weather;\r\n    return (\r\n      <div className=\"ui center aligned grid\">\r\n        <div className=\"column current-weather-container \">\r\n          <div className=\"sixteen wide column current-weather-city-name\">\r\n            <h1>\r\n              {cityName}, {countryCode}\r\n            </h1>\r\n            <hr width=\"35%\" />\r\n          </div>\r\n          <div className=\"sixteen wide column \">\r\n            <img\r\n              className=\"current-weather-icon\"\r\n              alt=\"Weather Icon\"\r\n              src={`https://www.weatherbit.io/static/img/icons/${icon}.png`}\r\n            />\r\n          </div>\r\n          <div className=\"sixteen wide column \">\r\n            <h3>Temperatura</h3>\r\n          </div>\r\n          <div className=\"sixteen wide column current-temeperature-values\">\r\n            <p>{temp} &#186; C </p>\r\n          </div>\r\n          <div className=\"sixteen wide column \">\r\n            <h3>Temeperatura odczuwalna</h3>\r\n          </div>\r\n          <div className=\"sixteen wide column current-temeperature-values\">\r\n            <p>{appTemp} &#186; C </p>\r\n          </div>\r\n          <div className=\"sixteen wide column\">\r\n            <h3>Prędkość wiatru</h3>\r\n          </div>\r\n          <div className=\"sixteen wide column current-temeperature-values\">\r\n            <p>{windSpd} m/s </p>\r\n          </div>\r\n          <div className=\"sixteen wide column\">\r\n            <h3>Kierunek wiatru</h3>\r\n          </div>\r\n          <div className=\"sixteen wide column current-temeperature-values\">\r\n            <p>{windCdir} </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"ui center aligned grid\">\r\n        <div className=\"column current-weather-container \">\r\n          <div className=\"sixteen wide column current-weather-city-name\">\r\n            <Loader />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\n\r\nconst CityNotFound = () => {\r\n  return (\r\n    <div className=\"ui one column centered grid\">\r\n      <div className=\"column home-fetching-error\">\r\n        <div className=\"ui red message\">\r\n          Niestety, nie znaleźliśmy podanego miasta\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CityNotFound;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchAllForecasts } from \"../../store/ducks/weather\";\r\nimport { currentCity } from \"../../store/ducks/city\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport CurrentWeather from \"../CurrentWeather/CurrentWeather\";\r\nimport CityNotFound from \"../CityNotFound\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  fetchData() {\r\n    const currentCity = this.props.city;\r\n\r\n    this.props.fetchAllForecasts(currentCity);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData();\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.props.currentCity(e.target.value);\r\n  }\r\n\r\n  formSubmit(e) {\r\n    e.preventDefault();\r\n    this.fetchData();\r\n  }\r\n\r\n  render() {\r\n    const responseStatus = this.props.currentWeatherResponse.status;\r\n    const { error, city, fetching } = this.props;\r\n\r\n    if (error !== null) {\r\n      return <Redirect to=\"/error\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"ui one column centered grid\">\r\n          <form>\r\n            <div className=\"ui column input home-city-input-container\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nazwa miejscowości\"\r\n                onChange={this.handleInputChange.bind(this)}\r\n                value={city}\r\n                className=\"home-city-input\"\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"ui blue button home-city-button\"\r\n              onClick={this.formSubmit.bind(this)}\r\n            >\r\n              Szukaj\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {responseStatus === 204 ? (\r\n          <CityNotFound />\r\n        ) : (\r\n          <CurrentWeather\r\n            currentWeatherResponse={this.props.currentWeatherResponse}\r\n            fetching={fetching}\r\n          />\r\n        )}\r\n        <div className=\"home-first-button\">\r\n          <LinkButton\r\n            message=\"Pogoda na najbliższe 24h\"\r\n            path=\"/hours_forecast\"\r\n            additionalOption={\r\n              responseStatus === 204 ? \"fluid disabled\" : \"fluid\"\r\n            }\r\n          />\r\n        </div>\r\n        <LinkButton\r\n          message=\"Pogoda na najbliższe 16 dni\"\r\n          path=\"/days_forecast\"\r\n          additionalOption={responseStatus === 204 ? \"fluid disabled\" : \"fluid\"}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ city, weather }) => {\r\n  return {\r\n    city,\r\n    currentWeatherResponse: weather.currentWeather,\r\n    fetching: weather.fetchingCurrentWeather,\r\n    error: weather.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  currentCity,\r\n  fetchAllForecasts\r\n})(Home);\r\n","export const SELECTED_CITY = \"city/SELECTED_CITY\";\r\n\r\nexport default (state = \"Warszawa\", action) => {\r\n  switch (action.type) {\r\n    case \"SELECTED_CITY\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const currentCity = city => {\r\n  return {\r\n    type: \"SELECTED_CITY\",\r\n    payload: city\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { formatDate } from \"../../helpers/formatDate\";\r\n\r\nconst HoursForecastItem = ({ hour }) => {\r\n  return (\r\n    <div className=\"item hourly-weather-forecast-item\" key={hour.windGustSpd}>\r\n      <img\r\n        className=\"ui avatar image hourly-weather-forecast-icon\"\r\n        src={`https://www.weatherbit.io/static/img/icons/${hour.weather.icon}.png`}\r\n        alt=\"Weather Icon\"\r\n      />\r\n      <div className=\"content\">\r\n        <p>\r\n          <span className=\"hourly-weather-forecast-hour\">\r\n            {formatDate(hour.timestampLocal)}\r\n          </span>\r\n          <span className=\"hourly-weather-forecast-temperature\">\r\n            {hour.temp} &#186; C\r\n          </span>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HoursForecastItem;\r\n","export const formatDate = date => {\r\n  return date.split(\"T\")[1].slice(0, 5);\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport HoursForecastItem from \"../HoursForecastItem/HoursForecastItem\";\r\nimport Loader from \"../Loader\";\r\nimport \"./HoursForecastList.css\";\r\n\r\nconst HoursForecastList = ({ hoursForecastResponse, fetching }) => {\r\n  if (!fetching) {\r\n    const hoursForecast = hoursForecastResponse.data.data;\r\n    const hourItem = hoursForecast.map(hour => {\r\n      return <HoursForecastItem hour={hour} key={hour.ts} />;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"ui one column centered grid\">\r\n          <div className=\"column hourly-weather-forecast-list-container\">\r\n            <h1 className=\"hourly-weather-forecast-header\">\r\n              {hoursForecastResponse.data.cityName},{\" \"}\r\n              {hoursForecastResponse.data.countryCode}\r\n            </h1>\r\n            <LinkButton\r\n              message=\"Wróć na główną stronę\"\r\n              path=\"/\"\r\n              additionalOption=\"fluid\"\r\n            />\r\n            <div className=\"ui middle aligned divided list\">{hourItem}</div>\r\n            <LinkButton\r\n              message=\"Wróć na główną stronę\"\r\n              path=\"/\"\r\n              additionalOption=\"fluid\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ weather }) => {\r\n  return {\r\n    hoursForecastResponse: weather.hoursForecast,\r\n    fetching: weather.fetchingHoursForecast\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(HoursForecastList);\r\n","const days = {\r\n  0: \"Niedziela\",\r\n  1: \"Poniedziałek\",\r\n  2: \"Wtorek\",\r\n  3: \"Środa\",\r\n  4: \"Czwartek\",\r\n  5: \"Piątek\",\r\n  6: \"Sobota\"\r\n};\r\n\r\nexport const nameOfTheDay = date => {\r\n  const day = new Date(date).getDay();\r\n\r\n  return days[day];\r\n};\r\n","import React from \"react\";\r\nimport { nameOfTheDay } from \"../../helpers/nameOfTheDay\";\r\n\r\nconst DaysForecastCard = ({ day }) => {\r\n  return (\r\n    <div className=\"seven wide column days-forecast-day-container\" key={day.ts}>\r\n      <h3>{nameOfTheDay(day.datetime)}</h3>\r\n      <h4>{day.datetime}</h4>\r\n      <img\r\n        className=\"ui avatar image days-forecast-weather-icon\"\r\n        src={`https://www.weatherbit.io/static/img/icons/${day.weather.icon}.png`}\r\n        alt=\"Weather Icon\"\r\n      />\r\n      <p>Średnia temperatura:</p>\r\n      <p>{day.temp} &#186; C</p>\r\n      <p>Maksymalna temperatura:</p>\r\n      <p>{day.maxTemp} &#186; C</p>\r\n      <p>Minimalna temperatura: </p>\r\n      <p>{day.minTemp} &#186; C</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DaysForecastCard;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport DaysForecastCard from \"../DaysForecastCard/DaysForecastCard\";\r\nimport Loader from \"../Loader\";\r\nimport \"./DaysForecast.css\";\r\n\r\nconst DaysForecast = ({ daysForecastResponse, fetching }) => {\r\n  if (!fetching) {\r\n    const daysForecast = daysForecastResponse.data.data;\r\n    const dayCard = daysForecast.map(day => {\r\n      return <DaysForecastCard day={day} key={day.ts} />;\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"ui one grid\">\r\n          <div className=\"sixteen wide column\">\r\n            <h1 className=\"days-forecast-header\">\r\n              {daysForecastResponse.data.cityName},{\" \"}\r\n              {daysForecastResponse.data.countryCode}\r\n            </h1>\r\n          </div>\r\n        </div>\r\n        <LinkButton\r\n          message=\"Wróć na główną stronę\"\r\n          path=\"/\"\r\n          additionalOption=\"fluid\"\r\n        />\r\n        <div className=\"ui one column centered grid\">\r\n          <div className=\"column days-forecast-days-container\">\r\n            <div className=\"ui sixteen grid\">{dayCard}</div>\r\n          </div>\r\n        </div>\r\n        <LinkButton\r\n          message=\"Wróć na główną stronę\"\r\n          path=\"/\"\r\n          additionalOption=\"fluid\"\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = ({ weather }) => {\r\n  return {\r\n    daysForecastResponse: weather.daysForecast,\r\n    fetching: weather.fetchingDaysForecast\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(DaysForecast);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport \"./ErrorPage.css\";\r\n\r\nconst ErrorPage = ({ error, pageNotFound }) => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui one grid\">\r\n        <div className=\"sixteen wide column error-container\">\r\n          <div className=\"error-icon-container\">\r\n            <i className=\"close icon error-icon\"></i>\r\n          </div>\r\n          <h1 className=\"error-header\">\r\n            {pageNotFound ? (\r\n              pageNotFound\r\n            ) : error ? (\r\n              error.message\r\n            ) : (\r\n              <Redirect to=\"/\" />\r\n            )}\r\n          </h1>\r\n        </div>\r\n      </div>\r\n      <LinkButton\r\n        message=\"Wróc do głównego ekranu\"\r\n        path=\"/\"\r\n        additionalOption={\"fluid red\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ weather }) => {\r\n  return {\r\n    error: weather.error\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ErrorPage);\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport HoursForecast from \"./HoursForecastList/HoursForecastList\";\r\nimport DaysForecast from \"./DaysForecast/DaysForecast\";\r\nimport ErrorPage from \"./ErrorPage/ErrorPage\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={Home} />\r\n        <Route path=\"/hours_forecast\" component={HoursForecast} />\r\n        <Route path=\"/days_forecast\" component={DaysForecast} />\r\n        <Route path=\"/error\" component={ErrorPage} />\r\n        <Route\r\n          component={() => (\r\n            <ErrorPage pageNotFound=\"Niestety nie znależliśmy podanej strony\" />\r\n          )}\r\n        />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport weather from \"./weather\";\r\nimport city from \"./city\";\r\n\r\nexport default combineReducers({\r\n  city,\r\n  weather\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./ducks\";\r\n\r\nexport const store = createStore(reducers, applyMiddleware(thunk));\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store/createStore\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}