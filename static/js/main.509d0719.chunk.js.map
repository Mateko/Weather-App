{"version":3,"sources":["components/CurrentWeather/CurrentWeather.js","api/apiKey.js","api/weatherbit.js","actions/index.js","components/LinkButton.js","components/Home/Home.js","components/Loader.js","components/HoursForecast/HoursForecast.js","components/App.js","reducers/index.js","reducers/cityReducer.js","reducers/currentWeatherReducer.js","reducers/hoursForecastReducer.js","index.js"],"names":["CurrentWeather","currentWeather","currentWeatherResponse","data","app_temp","city_name","temp","wind_spd","wind_cdir","country_code","icon","weather","className","width","alt","src","API_KEY","weatherbit","axios","create","baseURL","city","get","hoursForecast","currentCity","type","payload","LinkButton","message","path","additionalOption","role","to","Home","this","props","fetchCurrentWeather","fetchHoursForecast","e","target","value","preventDefault","responseStatus","status","placeholder","onChange","handleInputChange","bind","onClick","formSubmit","React","Component","connect","state","dispatch","a","response","Loader","hoursForecastResponse","length","map","hour","timestamp_local","split","slice","displayHoursForecast","App","exact","component","basename","process","HoursForecast","combineReducers","action","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","querySelector"],"mappings":"+TA8DeA,G,MA3DQ,SAAC,GAAgC,IAChDC,EAD+C,EAA7BC,uBACsBC,KAAKA,KAAK,GAGtDC,EAMEH,EANFG,SACAC,EAKEJ,EALFI,UACAC,EAIEL,EAJFK,KACAC,EAGEN,EAHFM,SACAC,EAEEP,EAFFO,UACAC,EACER,EADFQ,aAGMC,EAAST,EAAeU,QAAxBD,KAER,OACE,yBAAKE,UAAU,0BACb,yBAAKA,UAAU,yCACb,yBAAKA,UAAU,qDACb,4BACGP,EADH,KACgBI,GAEhB,wBAAII,MAAM,SAEZ,yBAAKD,UAAU,wBACb,yBACEA,UAAU,2BACVE,IAAI,eACJC,IAAG,qDAAgDL,EAAhD,WAGP,yBAAKE,UAAU,wBACb,4CAEF,yBAAKA,UAAU,mDACb,2BAAIN,EAAJ,aAEF,yBAAKM,UAAU,wBACb,wDAEF,yBAAKA,UAAU,mDACb,2BAAIR,EAAJ,aAEF,yBAAKQ,UAAU,uBACb,+DAEF,yBAAKA,UAAU,mDACb,2BAAIL,EAAJ,UAEF,yBAAKK,UAAU,uBACb,gDAEF,yBAAKA,UAAU,mDACb,2BAAIJ,EAAJ,U,iCCvDGQ,EAAU,mCCGjBC,E,OAAaC,EAAMC,OAAO,CAC9BC,QAAS,oCAGEnB,EAAiB,SAAAoB,GAG5B,OAFiBJ,EAAWK,IAAX,wBAAgCD,EAAhC,gBAA4CL,KAKlDO,EAAgB,SAAAF,GAK3B,OAJiBJ,EAAWK,IAAX,gCACUD,EADV,gBACsBL,EADtB,eCANQ,EAAc,SAAAH,GACzB,MAAO,CACLI,KAAM,gBACNC,QAASL,ICFEM,G,MAZI,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACnC,OACE,kBAAC,IAAD,CACElB,UAAS,yBAAoBkB,GAC7BC,KAAK,SACLC,GAAIH,GAEHD,KCCDK,E,4LAEF,IAAMT,EAAcU,KAAKC,MAAMd,KAE/Ba,KAAKC,MAAMC,oBAAoBZ,GAC/BU,KAAKC,MAAME,mBAAmBb,K,wCAGdc,GAChBJ,KAAKC,MAAMX,YAAYc,EAAEC,OAAOC,S,iCAGvBF,GACTA,EAAEG,iBACF,IAAMjB,EAAcU,KAAKC,MAAMd,KAE/Ba,KAAKC,MAAMC,oBAAoBZ,GAC/BU,KAAKC,MAAME,mBAAmBb,K,+BAI9B,IAAMkB,EAAiBR,KAAKC,MAAMjC,uBAAuByC,OAEzD,OACE,6BACE,yBAAK/B,UAAU,+BACb,8BACE,yBAAKA,UAAU,mCACb,2BACEa,KAAK,OACLmB,YAAY,0BACZC,SAAUX,KAAKY,kBAAkBC,KAAKb,SAG1C,4BACEtB,UAAU,kCACVoC,QAASd,KAAKe,WAAWF,KAAKb,OAFhC,YAQgB,MAAnBQ,EACC,yBAAK9B,UAAU,+BACb,yBAAKA,UAAU,8BACb,yBAAKA,UAAU,kBAAf,mFAKF,KACgB,MAAnB8B,EACC,kBAAC,EAAD,CACExC,uBAAwBgC,KAAKC,MAAMjC,yBAEnC,KACJ,yBAAKU,UAAU,+BACb,yBAAKA,UAAU,+CACb,yBAAKA,UAAU,8BACb,kBAAC,EAAD,CACEgB,QAAQ,gCACRC,KAAK,8BACLC,iBACqB,MAAnBY,EAAyB,iBAAmB,kB,GA/D3CQ,IAAMC,WAiFVC,eAPS,SAAAC,GACtB,MAAO,CACLhC,KAAMgC,EAAMhC,KACZnB,uBAAwBmD,EAAMnD,0BAIM,CACtCsB,cACAY,oBF5FiC,SAAAf,GAAI,8CAAI,WAAMiC,GAAN,eAAAC,EAAA,sEAClBtD,EAAeoB,GADG,OACnCmC,EADmC,OAGzCF,EAAS,CAAE7B,KAAM,kBAAmBC,QAAS8B,IAHJ,2CAAJ,uDE6FrCnB,mBFvFgC,SAAAhB,GAAI,8CAAI,WAAMiC,GAAN,eAAAC,EAAA,sEACjBhC,EAAcF,GADG,OAClCmC,EADkC,OAGxCF,EAAS,CAAE7B,KAAM,yBAA0BC,QAAS8B,IAHZ,2CAAJ,wDEoFvBJ,CAIZnB,GC/EYwB,EAfA,WACb,OACE,6BACE,yBAAK7C,UAAU,0BACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,wBAAf,gBAEF,4BACA,4BACA,+BC0DOwC,G,MAAAA,aANS,SAAAC,GACtB,MAAO,CACLK,sBAAuBL,EAAMK,yBAIOlC,EAAzB4B,EA9DO,SAAC,GAA+B,IAA7BM,EAA4B,EAA5BA,sBA8BvB,OAAqC,IAAjCA,EAAsBC,OAEtB,6BACE,yBAAK/C,UAAU,+BACb,yBAAKA,UAAU,iDACb,wBAAIA,UAAU,kCACX8C,EAAsBvD,KAAKE,UAD9B,IAC0C,IACvCqD,EAAsBvD,KAAKM,cAE9B,yBAAKG,UAAU,kCACZ8C,EAvCgB,WAC3B,IAAMnC,EAAgBmC,EAAsBvD,KAAKA,KAKjD,OAAOoB,EAAcqC,KAAI,SAAAC,GACvB,OACE,yBAAKjD,UAAU,qCACb,yBACEA,UAAU,+CACVG,IAAG,qDAAgD8C,EAAKlD,QAAQD,KAA7D,QACHI,IAAI,iBAEN,yBAAKF,UAAU,WACb,2BACE,0BAAMA,UAAU,gCACFiD,EAAKC,gBAdfC,MAAM,KAAK,GAAGC,MAAM,EAAG,IAgB3B,0BAAMpD,UAAU,uCACbiD,EAAKvD,KADR,iBAoByB2D,GAAyB,MAEpD,kBAAC,EAAD,CACErC,QAAQ,kDACRC,KAAK,IACLC,iBAAiB,aAOpB,kBAAC,EAAD,UCpCIoC,EAlBH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACErC,KAAK,IACLsC,OAAK,EACLC,UAAWnC,EACXoC,SAAUC,iBAEZ,kBAAC,IAAD,CACEzC,KAAK,8BACLsC,OAAK,EACLC,UAAWG,M,gBCZJC,cAAgB,CAC7BnD,KCNa,WAAiC,IAAhCgC,EAA+B,uDAAvB,WAAYoB,EAAW,uCAC7C,OAAQA,EAAOhD,MACb,IAAK,gBACH,OAAOgD,EAAO/C,QAChB,QACE,OAAO2B,IDEXnD,uBEPa,WAAyB,IAAxBmD,EAAuB,uDAAf,GAAIoB,EAAW,uCACrC,OAAQA,EAAOhD,MACb,IAAK,kBACH,OAAOgD,EAAO/C,QAChB,QACE,OAAO2B,IFGXK,sBGRa,WAAyB,IAAxBL,EAAuB,uDAAf,GAAIoB,EAAW,uCACrC,OAAQA,EAAOhD,MACb,IAAK,yBACH,OAAOgD,EAAO/C,QAChB,QACE,OAAO2B,MCGPqB,EAAQC,YAAYC,EAAUC,YAAgBC,MAEpDC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFO,SAASC,cAAc,Y","file":"static/js/main.509d0719.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./CurrentWeather.css\";\r\n\r\nconst CurrentWeather = ({ currentWeatherResponse }) => {\r\n  const currentWeather = currentWeatherResponse.data.data[0];\r\n\r\n  const {\r\n    app_temp,\r\n    city_name,\r\n    temp,\r\n    wind_spd,\r\n    wind_cdir,\r\n    country_code\r\n  } = currentWeather;\r\n\r\n  const { icon } = currentWeather.weather;\r\n\r\n  return (\r\n    <div className=\"ui center aligned grid\">\r\n      <div className=\"column current-temperature-container \">\r\n        <div className=\"sixteen wide column current-temperature-city-name\">\r\n          <h1>\r\n            {city_name}, {country_code}\r\n          </h1>\r\n          <hr width=\"35%\" />\r\n        </div>\r\n        <div className=\"sixteen wide column \">\r\n          <img\r\n            className=\"current-temperature-icon\"\r\n            alt=\"Weather Icon\"\r\n            src={`https://www.weatherbit.io/static/img/icons/${icon}.png`}\r\n          />\r\n        </div>\r\n        <div className=\"sixteen wide column \">\r\n          <h3>Temperatura</h3>\r\n        </div>\r\n        <div className=\"sixteen wide column current-temeperature-values\">\r\n          <p>{temp} &#186; C </p>\r\n        </div>\r\n        <div className=\"sixteen wide column \">\r\n          <h3>Temeperatura odczuwalna</h3>\r\n        </div>\r\n        <div className=\"sixteen wide column current-temeperature-values\">\r\n          <p>{app_temp} &#186; C </p>\r\n        </div>\r\n        <div className=\"sixteen wide column\">\r\n          <h3>Prędkość wiatru</h3>\r\n        </div>\r\n        <div className=\"sixteen wide column current-temeperature-values\">\r\n          <p>{wind_spd} m/s </p>\r\n        </div>\r\n        <div className=\"sixteen wide column\">\r\n          <h3>Kierunek wiatru</h3>\r\n        </div>\r\n        <div className=\"sixteen wide column current-temeperature-values\">\r\n          <p>{wind_cdir} </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentWeather;\r\n","export const API_KEY = \"3360ae64317b4762ba87b0e2747b0ccf\";\r\n","import axios from \"axios\";\r\nimport { API_KEY } from \"./apiKey\";\r\n\r\nconst weatherbit = axios.create({\r\n  baseURL: \"https://api.weatherbit.io/v2.0/\"\r\n});\r\n\r\nexport const currentWeather = city => {\r\n  const response = weatherbit.get(`/current?city=${city}&key=${API_KEY}`);\r\n\r\n  return response;\r\n};\r\n\r\nexport const hoursForecast = city => {\r\n  const response = weatherbit.get(\r\n    `/forecast/hourly?city=${city}&key=${API_KEY}&hours=24`\r\n  );\r\n\r\n  return response;\r\n};\r\n","import { currentWeather, hoursForecast } from \"../api/weatherbit\";\r\n\r\nexport const fetchCurrentWeather = city => async dispatch => {\r\n  const response = await currentWeather(city);\r\n\r\n  dispatch({ type: \"CURRENT_WEATHER\", payload: response });\r\n};\r\n\r\nexport const fetchHoursForecast = city => async dispatch => {\r\n  const response = await hoursForecast(city);\r\n\r\n  dispatch({ type: \"HOURS_FORECAST_WEATHER\", payload: response });\r\n};\r\n\r\nexport const currentCity = city => {\r\n  return {\r\n    type: \"SELECTED_CITY\",\r\n    payload: city\r\n  };\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst LinkButton = ({ message, path, additionalOption }) => {\r\n  return (\r\n    <Link\r\n      className={`ui blue button ${additionalOption}`}\r\n      role=\"button\"\r\n      to={path}\r\n    >\r\n      {message}\r\n    </Link>\r\n  );\r\n};\r\n\r\nexport default LinkButton;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CurrentWeather from \"../CurrentWeather/CurrentWeather\";\r\nimport {\r\n  currentCity,\r\n  fetchCurrentWeather,\r\n  fetchHoursForecast\r\n} from \"../../actions\";\r\nimport \"./Home.css\";\r\nimport LinkButton from \"../LinkButton\";\r\n\r\nclass Home extends React.Component {\r\n  componentDidMount() {\r\n    const currentCity = this.props.city;\r\n\r\n    this.props.fetchCurrentWeather(currentCity);\r\n    this.props.fetchHoursForecast(currentCity);\r\n  }\r\n\r\n  handleInputChange(e) {\r\n    this.props.currentCity(e.target.value);\r\n  }\r\n\r\n  formSubmit(e) {\r\n    e.preventDefault();\r\n    const currentCity = this.props.city;\r\n\r\n    this.props.fetchCurrentWeather(currentCity);\r\n    this.props.fetchHoursForecast(currentCity);\r\n  }\r\n\r\n  render() {\r\n    const responseStatus = this.props.currentWeatherResponse.status;\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"ui one column centered grid\">\r\n          <form>\r\n            <div className=\"ui column input home-city-input\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Nazwa miejscowości\"\r\n                onChange={this.handleInputChange.bind(this)}\r\n              />\r\n            </div>\r\n            <button\r\n              className=\"ui blue button home-city-button\"\r\n              onClick={this.formSubmit.bind(this)}\r\n            >\r\n              Szukaj\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {responseStatus === 204 ? (\r\n          <div className=\"ui one column centered grid\">\r\n            <div className=\"column home-fetching-error\">\r\n              <div className=\"ui red message\">\r\n                Niestety wystąpił błąd, wpisz jeszcze raz szukane miasto.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {responseStatus === 200 ? (\r\n          <CurrentWeather\r\n            currentWeatherResponse={this.props.currentWeatherResponse}\r\n          />\r\n        ) : null}\r\n        <div className=\"ui one column centered grid\">\r\n          <div className=\"column home-button-container-hours-forecast\">\r\n            <div className=\"home-button-hours-forecast\">\r\n              <LinkButton\r\n                message=\"Pogoda na najbliższe 24h\"\r\n                path=\"/twenty_four_hours_forecast\"\r\n                additionalOption={\r\n                  responseStatus === 204 ? \"fluid disabled\" : \"fluid\"\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    city: state.city,\r\n    currentWeatherResponse: state.currentWeatherResponse\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  currentCity,\r\n  fetchCurrentWeather,\r\n  fetchHoursForecast\r\n})(Home);\r\n","import React from \"react\";\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <div className=\"ui grid aligned center\">\r\n        <div className=\"ui active inverted dimmer\">\r\n          <div className=\"ui large text loader\">Wczytywanie</div>\r\n        </div>\r\n        <p></p>\r\n        <p></p>\r\n        <p></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { currentCity } from \"../../actions\";\r\nimport LinkButton from \"../LinkButton\";\r\nimport Loader from \"../Loader\";\r\nimport \"./HoursForecast.css\";\r\n\r\nconst HoursForecast = ({ hoursForecastResponse }) => {\r\n  const displayHoursForecast = () => {\r\n    const hoursForecast = hoursForecastResponse.data.data;\r\n    const formatDate = date => {\r\n      return date.split(\"T\")[1].slice(0, 5);\r\n    };\r\n\r\n    return hoursForecast.map(hour => {\r\n      return (\r\n        <div className=\"item hourly-weather-forecast-item\">\r\n          <img\r\n            className=\"ui avatar image hourly-weather-forecast-icon\"\r\n            src={`https://www.weatherbit.io/static/img/icons/${hour.weather.icon}.png`}\r\n            alt=\"Weather Icon\"\r\n          />\r\n          <div className=\"content\">\r\n            <p>\r\n              <span className=\"hourly-weather-forecast-hour\">\r\n                {formatDate(hour.timestamp_local)}\r\n              </span>\r\n              <span className=\"hourly-weather-forecast-temperature\">\r\n                {hour.temp} &#186; C\r\n              </span>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  if (hoursForecastResponse.length !== 0) {\r\n    return (\r\n      <div>\r\n        <div className=\"ui one column centered grid\">\r\n          <div className=\"column hourly-weather-forecast-list-container\">\r\n            <h1 className=\"hourly-weather-forecast-header\">\r\n              {hoursForecastResponse.data.city_name},{\" \"}\r\n              {hoursForecastResponse.data.country_code}\r\n            </h1>\r\n            <div className=\"ui middle aligned divided list\">\r\n              {hoursForecastResponse ? displayHoursForecast() : null}\r\n            </div>\r\n            <LinkButton\r\n              message=\"Wróć na główną stronę\"\r\n              path=\"/\"\r\n              additionalOption=\"fluid\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <Loader />;\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hoursForecastResponse: state.hoursForecastResponse\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, currentCity)(HoursForecast);\r\n/* */\r\n/*<div class=\"ui middle aligned divided list\">\r\n            <div class=\"item\">\r\n              <img class=\"ui avatar image\" />\r\n              <div class=\"content\"></div>\r\n            </div>\r\n          </div> */\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport Home from \"./Home/Home\";\r\nimport HoursForecast from \"./HoursForecast/HoursForecast\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route\r\n        path=\"/\"\r\n        exact\r\n        component={Home}\r\n        basename={process.env.PUBLIC_URL}\r\n      />\r\n      <Route\r\n        path=\"/twenty_four_hours_forecast\"\r\n        exact\r\n        component={HoursForecast}\r\n      />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { combineReducers } from \"redux\";\r\nimport cityReducer from \"./cityReducer\";\r\nimport currentWeatherReducer from \"./currentWeatherReducer\";\r\nimport hoursForecastReducer from \"./hoursForecastReducer\";\r\n\r\nexport default combineReducers({\r\n  city: cityReducer,\r\n  currentWeatherResponse: currentWeatherReducer,\r\n  hoursForecastResponse: hoursForecastReducer\r\n});\r\n","export default (state = \"Warszawa\", action) => {\r\n  switch (action.type) {\r\n    case \"SELECTED_CITY\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"CURRENT_WEATHER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export default (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"HOURS_FORECAST_WEATHER\":\r\n      return action.payload;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport reducers from \"./reducers\";\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.querySelector(\"#root\")\r\n);\r\n"],"sourceRoot":""}